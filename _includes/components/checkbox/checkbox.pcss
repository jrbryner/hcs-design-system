.checkbox {
  --component-width: 1.25rem;

  /* Input is hidden
     label is background
     ::after is "check" */
  input + span {
    width: var(--component-width);
    height: var(--component-width);

    box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.25);
    transition: background-color 200ms ease-in-out;

    &::after {
      /* Create a check and rotate */
      @apply block border-white border-0 border-b-3 border-l-3 opacity-0 bg-transparent absolute;

      content: '';
      width: calc(var(--component-width) / 2);
      height: calc(var(--component-width) / 3);
      transform: rotate(-45deg) translate(0, 100%);
      transition: opacity 100ms ease-in-out;
    }
  }

  /* Checked */
  input:checked + span {
    @apply bg-hcs-blue;

    &::after {
      @apply opacity-100;
    }
  }

  /* Disabled */
  input:disabled + span {
    @apply bg-ui-light-gray;

    &::after {
      @apply border-hcs-gray-t-60;
    }
  }

  &.small {
    --component-width: 1rem;

    input + span {
      width: var(--component-width);
      height: var(--component-width);

      &::after {
        @apply border-b-2 border-l-2;
        width: calc(var(--component-width) / 2);
        height: calc(var(--component-width) / 3);
        transform: rotate(-45deg) translate(0, 120%);
      }
    }
  }

  /* Indeterminate
     applied by class on container  */
  &.indeterminate input + span {
    &::after {
      @apply border-l-0 h-0;
      top: 50%;
      transform: translate(50%, -50%);
    }
  }
}
